{"version":3,"sources":["helpers/renderFormField.js","helpers/renderFormGroupField.js","helpers/renderFormCheckbox.js","helpers/renderFormTextArea.js","helpers/renderFormFileInput.js","pages/product/Add.jsx"],"names":["renderFormField","props","input","tips","label","required","meta","touched","error","warning","Fragment","className","htmlFor","name","id","renderFormGroupField","Icon","icon","renderFormCheckbox","type","renderFormTextArea","placeholder","renderFileInput","onImageChange","accept","onChange","event","preventDefault","imageFile","target","files","test","alert","fileSize","size","handleChange","ProductCreateForm","history","useHistory","React","useState","setSent","isSubmitting","setIsSubmitting","setError","success","setSuccess","handleSubmit","values","a","originPrice","price","productImage","productInfo","discountPrice","discountPercentage","Math","round","img","link","star","axios","post","result","status","push","onSubmit","subscription","submitting","initialValues","isProductNew","isHot","isFreeShipping","inStock","render","component","renderFormFileInput","style","color","textAlign","sx","mt","mb","fullWidth"],"mappings":"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","file":"static/js/7.60bf6e98.chunk.js","sourcesContent":["import React from \"react\";\nconst renderFormField = (props) => {\n  const {\n    input,\n    tips,\n    label,\n    required,\n    meta: { touched, error, warning },\n  } = props;\n  return (\n    <React.Fragment>\n      {label && (\n        <label\n          className={`form-label ${required ? \"required\" : \"\"}`}\n          htmlFor={input.name}\n        >\n          {label}\n        </label>\n      )}\n      <input {...input} {...props} id={input.name} className=\"form-control\" />\n      {tips && <div className=\"form-text\">{tips}</div>}\n      {touched &&\n        ((error && <div className=\"invalid-feedback\">{error}</div>) ||\n          (warning && <span>{warning}</span>))}\n    </React.Fragment>\n  );\n};\nexport default renderFormField;\n","import React from \"react\";\n//export default function renderFormGroupField({\nconst renderFormGroupField = (props) => {\n  const {\n    input,\n    label,\n    tips,\n    required,\n    meta: { touched, error, warning },\n  } = props;\n  const Icon = props.icon;\n  return (\n    <div className={`form-group ${props.className}`}>\n      {label && (\n        <label\n          className={`form-label ${required ? \"required\" : \"\"}`}\n          htmlFor={input.name}\n        >\n          {label}\n        </label>\n      )}\n\n      <div className=\"input-group\">\n        <span className=\"input-group-text\">\n          <Icon />\n        </span>\n        <input {...input} {...props} id={input.name} className=\"form-control\" />\n        {touched &&\n          ((error && <div className=\"invalid-feedback\">{error}</div>) ||\n            (warning && <span>{warning}</span>))}\n      </div>\n      {tips && <div className=\"form-text\">{tips}</div>}\n    </div>\n  );\n};\n\nexport default renderFormGroupField;\n","import React from \"react\";\n\nconst renderFormCheckbox = (props) => {\n  const {\n    input,\n    label,\n    id,\n    //value,\n    meta: { touched, error, warning },\n  } = props;\n  return (\n    <div className=\"form-check form-check-inline\">\n      <input\n        {...input}\n        {...props}\n        className=\"form-check-input\"\n        type=\"checkbox\"\n        // value={value}\n        // id={id}\n      />\n      <label className=\"form-check-label\" htmlFor={id}>\n        {label}\n      </label>\n      {touched &&\n        ((error && <div className=\"invalid-feedback\">{error}</div>) ||\n          (warning && <span>{warning}</span>))}\n    </div>\n  );\n};\nexport default renderFormCheckbox;\n","import React from \"react\";\nconst renderFormTextArea = (props) => {\n  const {\n    input,\n    label,\n    placeholder,\n    tips,\n    required,\n    meta: { touched, error, warning },\n  } = props;\n  return (\n    <React.Fragment>\n      <label\n        className={`form-label ${required ? \"required\" : \"\"}`}\n        htmlFor={input.name}\n      >\n        {label}\n      </label>\n      <textarea\n        {...input}\n        {...props}\n        id={input.name}\n        className=\"form-control\"\n        placeholder={placeholder}\n      />\n      {tips && <div className=\"form-text\">{tips}</div>}\n      {touched &&\n        ((error && <div className=\"invalid-feedback\">{error}</div>) ||\n          (warning && <span>{warning}</span>))}\n    </React.Fragment>\n  );\n};\nexport default renderFormTextArea;\n","import React from \"react\";\n\nconst handleChange = (event, input, onImageChange) => {\n  event.preventDefault();\n  let imageFile = event.target.files[0];\n  if (imageFile) {\n    if (/\\.(jpe?g|png)$/i.test(imageFile?.name) === false) {\n      input.onChange(null);\n      onImageChange(null);\n      alert(\"Please select image file only!\");\n    } else {\n      var fileSize = imageFile.size / 1024 / 1024; // in MB\n      if (fileSize > 5) {\n        alert(`Photo size must be less or equal to 5MB. Your photo size is ${fileSize}`);\n      } else {\n        input.onChange(imageFile);\n        onImageChange(imageFile);\n      }\n    }\n  } else {\n    input.onChange(null);\n    onImageChange(null);\n  }\n};\n\nconst renderFileInput = (props) => {\n  const {\n    input,\n    onImageChange,\n    tips,\n    meta: { touched, error, warning },\n  } = props;\n  return (\n    <React.Fragment>\n      <div className=\"input-group mb-3\">\n        <div className=\"form-file form-file-sm\">\n          <input\n            type=\"file\"\n            name=\"formFile\"\n            className=\"form-file-input\"\n            id={input.name}\n            accept=\"image/x-png,image/jpeg\"\n            onChange={(event) => handleChange(event, input, onImageChange)}\n            required\n          />\n          <label className=\"form-file-label\" htmlFor={input.name}>\n            <span className=\"form-file-text\">Choose file...</span>\n            <span className=\"form-file-button\">Browse</span>\n          </label>\n          {tips && <div className=\"form-text\">{tips}</div>}\n          {touched &&\n            ((error && <div className=\"invalid-feedback\">{error}</div>) ||\n              (warning && <span>{warning}</span>))}\n        </div>\n      </div>\n    </React.Fragment>\n  );\n};\nexport default renderFileInput;\n","import React from \"react\";\r\nimport { Field, Form } from \"react-final-form\"\r\nimport { useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport FormButton from \"../common/modules/form/FormButton\";\r\n\r\nimport {\r\n  renderFormField,\r\n  renderFormCheckbox,\r\n  renderFormFileInput\r\n} from \"../../helpers/renderForm\";\r\n\r\nexport default function ProductCreateForm(props) {\r\n  const history = useHistory();\r\n  const [sent, setSent] = React.useState(false);\r\n  const [isSubmitting, setIsSubmitting] = React.useState(true);\r\n  const [error, setError] = React.useState(\"\");\r\n  const [success, setSuccess] = React.useState(\"\");\r\n\r\n  \r\n  let formData = {\r\n    isProductNew: false,\r\n    isHot:false,\r\n    isFreeShipping: false,\r\n    inStock: false\r\n  };\r\n\r\n\r\n  const onImageChange = ()=> {\r\n  }\r\n\r\n  const handleSubmit = async (values) => {\r\n    const { originPrice, price, productImage } = values;\r\n    const productInfo = {\r\n      discountPrice: originPrice - price,\r\n      discountPercentage:  Math.round((originPrice - price)/ originPrice*100),\r\n      img: `../../images/products/${productImage.name}`,\r\n      link: 'product/detail',\r\n      star: 5\r\n    }\r\n\r\n    try {\r\n        const result = await axios.post(\r\n            `http://localhost:5000/products/addProduct`,\r\n            { ...values, ...productInfo}\r\n        );\r\n        if (result) {\r\n            if (result.status === 201) {\r\n                setSent(true);\r\n                setSuccess(\"Product has been Added Successfully\");\r\n                history.push(\"/\");\r\n            }\r\n        }\r\n    } catch (error) {\r\n        setIsSubmitting(false);\r\n        setSent(false);\r\n        setError(\"Could not Create Product. Kindly try again\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mt-3\">\r\n      <h4>Admin Inventory</h4>\r\n      <Form\r\n        onSubmit={handleSubmit}\r\n        subscription={{ submitting: isSubmitting }}\r\n        initialValues={{\r\n          ...formData,\r\n        }}\r\n       \r\n        render={({ handleSubmit }) => (\r\n          <form onSubmit={handleSubmit}>\r\n            <div className=\"row\">\r\n              <Field\r\n                name=\"category\"\r\n                type=\"text\"\r\n                label=\"Category\"\r\n                component={renderFormField}\r\n                placeholder=\"Enter Type Of Category\"\r\n                required\r\n              />\r\n              <Field\r\n                name=\"name\"\r\n                type=\"text\"\r\n                label=\"Product Name\"\r\n                component={renderFormField}\r\n                placeholder=\"Enter Product Name\"\r\n                required\r\n              />\r\n              <Field\r\n                name=\"price\"\r\n                type=\"number\"\r\n                label=\"Product Price\"\r\n                component={renderFormField}\r\n                placeholder=\"Product Price\"\r\n                required\r\n              />\r\n              <Field\r\n                name=\"productQuantity\"\r\n                type=\"number\"\r\n                label=\"Product Quntity\"\r\n                component={renderFormField}\r\n                placeholder=\"Product Quntity\"\r\n                required\r\n              />\r\n              <Field\r\n                name=\"soldBy\"\r\n                type=\"text\"\r\n                label=\"Sold By\"\r\n                component={renderFormField}\r\n                placeholder=\"Sold By\"\r\n                required\r\n              />\r\n               <Field\r\n                  id=\"inStock\"\r\n                  label=\"In Stock\"\r\n                  name=\"inStock\"\r\n                  type=\"checkbox\"\r\n                  component={renderFormCheckbox}\r\n                />\r\n               <Field\r\n                name=\"description\"\r\n                type=\"text\"\r\n                label=\"Product Description:\"\r\n                component={renderFormField}\r\n                placeholder=\"Product Description:\"\r\n                required\r\n              />\r\n              <Field\r\n                name=\"originPrice\"\r\n                type=\"number\"\r\n                label=\"Original Price\"\r\n                component={renderFormField}\r\n                placeholder=\"Original Price\"\r\n                required\r\n              />\r\n              <div className=\"col-md-12\">\r\n                <Field\r\n                  id=\"newStock\"\r\n                  label=\"New stock\"\r\n                  name=\"isProductNew\"\r\n                  type=\"checkbox\"\r\n                  component={renderFormCheckbox}\r\n                />\r\n                <Field\r\n                  id=\"trending\"\r\n                  label=\"Trenidng\"\r\n                  name=\"isHot\"\r\n                  type=\"checkbox\"\r\n                  component={renderFormCheckbox}\r\n                />\r\n                <Field\r\n                  id=\"freeShopping\"\r\n                  label=\"Free Shipping\"\r\n                  name=\"isFreeShipping\"\r\n                  type=\"checkbox\"\r\n                  component={renderFormCheckbox}\r\n                />\r\n                 <Field\r\n                  id=\"productImage\"\r\n                  label=\"Product Image\"\r\n                  name=\"productImage\"\r\n                  component={renderFormFileInput}\r\n                  onImageChange={onImageChange}\r\n                />\r\n                 {error ? (\r\n                        <h6 style={{ color: \"red\", textAlign: \"center\" }}>\r\n                            {error}\r\n                        </h6>\r\n                    ) : null}\r\n                    {success ? (\r\n                        <h6 style={{ color: \"green\", textAlign: \"center\" }}>\r\n                            {success}\r\n                        </h6>\r\n                    ) : null}\r\n                <FormButton\r\n                  sx={{ mt: 3, mb: 2 }}\r\n                  color=\"primary\"\r\n                  fullWidth\r\n                >\r\n                  Submit\r\n                </FormButton>\r\n               \r\n              </div>\r\n            </div>\r\n          </form>\r\n        )}\r\n      />\r\n\r\n    </div>\r\n  );\r\n};\r\n"],"sourceRoot":""}