{"version":3,"sources":["components/card/CardProductGrid.jsx"],"names":["CardProductGrid","props","product","data","dispatch","useDispatch","cartProducts","useSelector","state","homepageReducers","addOpacity","remainingInventory","opacity","className","src","img","alt","style","isProductNew","isHot","discountPercentage","discountPrice","to","link","onClick","productId","type","payload","name","price","originPrice","Array","from","length","star","_","key","role","title","console","log","currentCartProducts","slice","push","addToCart","disabled","icon","faCartPlus"],"mappings":"mGAAA,kEA+GeA,UAxGS,SAACC,GACrB,IAAMC,EAAUD,EAAME,KAChBC,EAAWC,cAEXC,EAAeC,aACjB,SAACC,GAAD,OAAWA,EAAMC,iBAAiBH,gBAoBlCI,EAAa,GAKjB,OAHmC,IAA/BR,EAAQS,qBACRD,EAAa,CAAEE,QAAS,KAGxB,sBAAKC,UAAU,OAAf,UACI,qBACIC,IAAKZ,EAAQa,IACbF,UAAU,eACVG,IAAI,MACJC,MAAOP,IAEVR,EAAQgB,cACL,sBAAML,UAAU,+CAAhB,iBAIHX,EAAQiB,OACL,sBAAMN,UAAU,kDAAhB,kBAIFX,EAAQkB,mBAAqB,GAAKlB,EAAQmB,cAAgB,IACxD,uBACIR,UAAS,+DACLX,EAAQgB,aAAe,OAAS,QAFxC,cAMKhB,EAAQkB,mBAAqB,EACxBlB,EAAQkB,mBAAqB,IAC7B,IAAMlB,EAAQmB,iBAG5B,sBAAKR,UAAU,YAAf,UACI,qBAAIA,UAAU,qBAAd,UACI,cAAC,IAAD,CACIS,GAAIpB,EAAQqB,KACZV,UAAU,uBACVW,QAAS,kBA/CPC,EA+C0BvB,EAAQuB,eA9CpDrB,EAAS,CACLsB,KAAM,qBACNC,QAASF,IAHI,IAACA,GA4CN,SAKKvB,EAAQ0B,OANjB,YAOiB1B,EAAQS,mBAPzB,QASA,sBAAKE,UAAU,OAAf,UACI,uBAAMA,UAAU,sBAAhB,cACMX,EAAQ2B,SAEb3B,EAAQ4B,YAAc,GACnB,sBAAKjB,UAAU,wBAAf,cACMX,EAAQ4B,eAGlB,sBAAMjB,UAAU,OAAhB,SACKkB,MAAMC,KAAK,CAAEC,OAAQ/B,EAAQgC,OAAQ,SAACC,EAAGC,GAAJ,OAClC,cAAC,IAAD,CACIvB,UAAU,qBACLuB,WAKrB,qBAAKvB,UAAU,mBAAmBwB,KAAK,QAAvC,SACI,wBACIX,KAAK,SACLb,UAAU,yBACVyB,MAAM,cACNd,QAAS,kBArFX,SAACC,GACfc,QAAQC,IAAI,uCAA8Bf,GAC1C,IAAMgB,EAAsBnC,EAAaoC,MAAM,GAC/CD,EAAoBE,KAAKlB,GACzBrB,EAAS,CACLsB,KAAM,gBACNC,QAASc,IA+EkBG,CAAU1C,EAAQuB,YACjCoB,SAAyC,IAA/B3C,EAAQS,mBALtB,SAOI,cAAC,IAAD,CAAiBmC,KAAMC","file":"static/js/11.b617f786.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { ReactComponent as IconStarFill } from \"bootstrap-icons/icons/star-fill.svg\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCartPlus } from \"@fortawesome/free-solid-svg-icons\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nconst CardProductGrid = (props) => {\n    const product = props.data;\n    const dispatch = useDispatch();\n\n    const cartProducts = useSelector(\n        (state) => state.homepageReducers.cartProducts\n    );\n\n    const addToCart = (productId) => {\n        console.log(\"ðŸš€ ~ addToCart ~ productId\", productId);\n        const currentCartProducts = cartProducts.slice(0);\n        currentCartProducts.push(productId);\n        dispatch({\n            type: \"CART_PRODUCTS\",\n            payload: currentCartProducts,\n        });\n    };\n\n    const setProductId = (productId) => {\n        dispatch({\n            type: \"CURRENT_PRODUCT_ID\",\n            payload: productId,\n        });\n    };\n\n    let addOpacity = {};\n\n    if (product.remainingInventory === 0) {\n        addOpacity = { opacity: 0.2 };\n    }\n    return (\n        <div className=\"card\">\n            <img\n                src={product.img}\n                className=\"card-img-top\"\n                alt=\"...\"\n                style={addOpacity}\n            />\n            {product.isProductNew && (\n                <span className=\"badge bg-success position-absolute mt-2 ms-2\">\n                    New\n                </span>\n            )}\n            {product.isHot && (\n                <span className=\"badge bg-danger position-absolute r-0 mt-2 me-2\">\n                    Hot\n                </span>\n            )}\n            {(product.discountPercentage > 0 || product.discountPrice > 0) && (\n                <span\n                    className={`rounded position-absolute p-2 bg-warning  ms-2 small ${\n                        product.isProductNew ? \"mt-5\" : \"mt-2\"\n                    }`}\n                >\n                    -\n                    {product.discountPercentage > 0\n                        ? product.discountPercentage + \"%\"\n                        : \"$\" + product.discountPrice}\n                </span>\n            )}\n            <div className=\"card-body\">\n                <h6 className=\"card-subtitle mb-2\">\n                    <Link\n                        to={product.link}\n                        className=\"text-decoration-none\"\n                        onClick={() => setProductId(product.productId)}\n                    >\n                        {product.name} \n                    </Link>{` (${product.remainingInventory})`}\n                </h6>\n                <div className=\"my-2\">\n                    <span className=\"font-weight-bold h5\">\n                        ${product.price}\n                    </span>\n                    {product.originPrice > 0 && (\n                        <del className=\"small text-muted ms-2\">\n                            ${product.originPrice}\n                        </del>\n                    )}\n                    <span className=\"ms-2\">\n                        {Array.from({ length: product.star }, (_, key) => (\n                            <IconStarFill\n                                className=\"text-warning me-1\"\n                                key={key}\n                            />\n                        ))}\n                    </span>\n                </div>\n                <div className=\"btn-group d-grid\" role=\"group\">\n                    <button\n                        type=\"button\"\n                        className=\"btn btn-sm btn-primary\"\n                        title=\"Add to cart\"\n                        onClick={() => addToCart(product.productId)}\n                        disabled={product.remainingInventory === 0}\n                    >\n                        <FontAwesomeIcon icon={faCartPlus} />\n                    </button>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default CardProductGrid;\n"],"sourceRoot":""}