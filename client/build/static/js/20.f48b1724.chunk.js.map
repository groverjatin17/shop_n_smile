{"version":3,"sources":["pages/product/List.jsx"],"names":["Paging","lazy","FilterCategory","FilterPrice","FilterStar","CardProductGrid","ProductListView","props","onPageChanged","page","products","getProducts","currentPage","totalPages","pageLimit","offset","currentProducts","slice","setState","onChangeView","view","homepageReducers","state","totalItems","a","axios","get","result","data","this","dispatch","type","payload","length","customProducts","selectedCategory","priceFilter","starFilter","searchFilter","filter","item","category","x","tempStarFilter","Set","sort","lowestRange","highestRange","pop","product","price","starProducts","star","forEach","ele","push","name","toLowerCase","includes","Fragment","className","style","backgroundImage","map","idx","totalRecords","pageNeighbours","sizing","alignment","Component","connect"],"mappings":"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","file":"static/js/20.f48b1724.chunk.js","sourcesContent":["import React, { lazy, Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport axios from \"../../helpers/axios\";\nconst Paging = lazy(() => import(\"../../components/Paging\"));\nconst FilterCategory = lazy(() => import(\"../../components/filter/Category\"));\nconst FilterPrice = lazy(() => import(\"../../components/filter/Price\"));\nconst FilterStar = lazy(() => import(\"../../components/filter/Star\"));\nconst CardProductGrid = lazy(() =>\n    import(\"../../components/card/CardProductGrid\")\n);\n\nclass ProductListView extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            currentProducts: [],\n            currentPage: null,\n            totalPages: null,\n            totalItems: 0,\n            view: \"grid\",\n        };\n    }\n\n    async UNSAFE_componentWillMount() {\n        const result = await axios.get(`/products`);\n\n        if(result.data){\n            this.props.dispatch({\n                type: \"PRODUCTS\",\n                payload: result.data\n            })\n        }\n\n        const totalItems = this.getProducts().length;\n        this.setState({ totalItems });\n    }\n\n    onPageChanged = (page) => {\n        let products = this.getProducts();\n        const { currentPage, totalPages, pageLimit } = page;\n        const offset = (currentPage - 1) * pageLimit;\n        const currentProducts = products.slice(offset, offset + pageLimit);\n        this.setState({ currentPage, currentProducts, totalPages });\n    };\n\n    onChangeView = (view) => {\n        this.setState({ view });\n    };\n\n    getProducts = () => {\n        let products = this.props.homepageReducers.products;\n        return products;\n    };\n\n    render() {\n        const products = this.getProducts();\n        let customProducts = [];\n        const { selectedCategory } = this.props.homepageReducers;\n        const { priceFilter, starFilter, searchFilter } = this.props.homepageReducers;\n        if (selectedCategory.length > 0) {\n            customProducts = products.filter(\n                (item) => item.category === selectedCategory\n            );\n        } else{\n          customProducts = products;\n        }\n        const tempStarFilter = [...new Set(starFilter)].sort();\n\n        const lowestRange = priceFilter[0];\n        const highestRange = priceFilter.slice(-1).pop();\n\n        if(priceFilter.length > 0){\n          customProducts = customProducts.filter(product => product.price > lowestRange && product.price < highestRange)\n        }\n\n        if(starFilter.length > 0){\n            const starProducts = [];\n            for(var x = 0; x<tempStarFilter.length; x++){\n                customProducts.filter(product => tempStarFilter[x] == product.star).forEach(ele => starProducts.push(ele));\n            }\n            customProducts = starProducts;\n          }\n          if(searchFilter){\n              customProducts = customProducts.filter(product => product.name.toLowerCase().includes(searchFilter))\n          }\n        return (\n            <React.Fragment>\n                <div\n                    className=\"p-5 bg-primary bs-cover\"\n                    style={{\n                        backgroundImage:\n                            \"url(../../images/banner/50-Banner.webp)\",\n                    }}\n                >\n                    <div className=\"container text-center\">\n                        <span className=\"display-5 px-3 bg-white rounded shadow\">\n                            Shop And Smile\n                        </span>\n                    </div>\n                </div>\n                <div className=\"container-fluid mb-3\">\n                    <div className=\"row mt-4\">\n                        <div className=\"col-md-3\">\n                            <FilterCategory />\n                            <FilterPrice />\n                            <FilterStar />\n                        </div>\n                        <div className=\"col-md-9\">\n                            <div className=\"row\">\n                                <div className=\"col-md-8\">\n                                    <span className=\"align-middle font-weight-bold\">\n                                        {customProducts.length} results for{\" \"}\n                                        <span className=\"text-warning\">\n                                            {selectedCategory ? selectedCategory : \"All Products\"}\n                                        </span>\n                                    </span>\n                                </div>\n                            </div>\n                            <hr />\n                            <div className=\"row g-3\">\n                                {this.state.view === \"grid\" &&\n                                    customProducts.map(\n                                        (product, idx) => {\n                                            return (\n                                                <div\n                                                    key={idx}\n                                                    className=\"col-md-4\"\n                                                >\n                                                    <CardProductGrid\n                                                        data={product}\n                                                    />\n                                                </div>\n                                            );\n                                        }\n                                    )}\n                            </div>\n                            <hr />\n                            <Paging\n                                totalRecords={this.state.totalItems}\n                                pageLimit={9}\n                                pageNeighbours={3}\n                                onPageChanged={this.onPageChanged}\n                                sizing=\"\"\n                                alignment=\"justify-content-center\"\n                            />\n                        </div>\n                    </div>\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    homepageReducers: state.homepageReducers,\n});\n\nexport default connect(mapStateToProps)(ProductListView);\n"],"sourceRoot":""}